[
  {
    "id": 1,
    "title": "MiniMax Algorithm",
    "details": "Tic-Tac-Toe game where the computer will always win.  The computer uses the minimax algorithm to chose the most optimal move.",
    "long_description": "This project was done as a final for Graph Theory with Application in Computer Science.  The goal of the project was to demostrate how a computer can beat a human through simply traversing a tree of all the possible moves that each player can make.  Since Tic-Tac-Toe is a solved game the minimax algorithm will always win or tie an opponent.  In terms of work on this project, Tiernan Meyer did all of the front end GUI work while I took on the implementation of the minimax algorithm and how tic-tac-toe was being stored on the backend.",
    "technologies": ["Java", "Eclipse", "Windows"],
    "image": "MiniMaxTicTacToe.jpg",
    "link": "https://github.com/Kirbitz/GraphTheoryMiniMaxAlg",
    "contributors": [
      {
        "id": 1,
        "name": "Tiernan Meyer",
        "link": "https://github.com/meyert8034"
      }
    ]
  },
  {
    "id": 2,
    "title": "Shell Project",
    "details": "A mock up of a real shell.  Uses C++ to simulate a linux shell with several of the main functions that are seen in a unix shell.",
    "long_description": "I am rather proud of this project as it was a fun project in my Operating Systems class, and I went way above and beyond the requirements of the project.  For instance, one feature that I had intended to implement at the very start of the project was the ability to multi-pipe commands.  When I built the system to run a command and pipe it into another, I did not realize that the implementation I had done was exaclty what I needed to do for multi-piping to work.  As such, when I talk about this project I state that was my unintended intended feature.  Among other things, I added the ability for persistant history, changing directories, and more.",
    "technologies": ["C++", "Linux", "Bash", "VSCode"],
    "image": "ShellProject.jpg",
    "link": "https://github.com/Kirbitz/shellProject"
  },
  {
    "id": 3,
    "title": "Scheduling Tool",
    "details": "Scheduling tool that makes use of the humanity api to process employee data.  Mainly used for better data consolidation than humanity.",
    "long_description": "The reason for this project was two fold.  On one hand I had created it as part of my final for Advanced Web and Internet, and on the other this turned into a useful tool for my job as STAR Director at the UW-Stout Technology Helpdesk.  This site connects to the humanity scheduling API and collects information on employees and portrays it in a organized format.  For instance, the landing page will display all managers and employees in separated areas and if a card is clicked then information about that employee will pop up in a simple modal.  Further, I collected information on shift sign ups which made my life easier when trying to figure out who needed to take shifts and who completed their required amount for the semester.  Also, I got to play around with the MUI framework and fell in love with material designed elements.",
    "technologies": [
      "JavaScript",
      "NodeJS",
      "Express.js",
      "React",
      "MaterialUI",
      "VSCode",
      "Windows"
    ],
    "image": "SchedulingTool.jpg",
    "link": "https://github.com/Kirbitz/SchedulingTool"
  },
  {
    "id": 4,
    "title": "Hand Ciphers",
    "details": "A variety of different hand ciphers that exist.  Algorithms to encrypt and decrypt those ciphers included for each one.",
    "long_description": "As the final project for Applied Cryptography, Andrew and I decided to code up a variety of hand ciphers in python along side program the Zodiac Killer Cipher.  This was a fun project to end a rather fun class where we got to deep dive into RSA encryption and how it can be broken if certain traits are not accounted for when creating keys.  For the project itself, I coded up the hand ciphers while Andrew worked on the Zodiac Killer Cipher.  Overall, it was a very fun project that taught me a lot about how simple ciphers work in code.",
    "technologies": ["Python", "VSCode", "Windows"],
    "image": "HandCiphers.jpg",
    "link": "https://github.com/Kirbitz/HandCiphers",
    "contributors": [
      {
        "id": 1,
        "name": "Andrew Ujda",
        "link": "https://github.com/AndrewUjda"
      }
    ]
  },
  {
    "id": 5,
    "title": "Portfolio Website",
    "details": "A website that holds a variety of content from the technologies I have worked in and projects that I have made.",
    "long_description": "This is obviously the site that you are looking at right now.  Part of the reason that I decided to work on this project was due to gaining knowledge about web technologies from advanced web and not being very happy with my previous portfolio website.  As such, I decided that I should code my own and make it look and feel how I want.  This is my first attempt at this website and I am thinking of updating it periodically in different tech stacks.",
    "technologies": [
      "JavaScript",
      "NodeJS",
      "Express.js",
      "React",
      "MaterialUI",
      "VSCode",
      "Windows"
    ],
    "image": "PortfolioWebsite.jpg",
    "link": "https://github.com/Kirbitz/kirbitz.github.io"
  },
  {
    "id": 6,
    "title": "Pixel Art Upscale To SVG",
    "details": "A variety of different pixel art upscale algorithms that then get converted to a SVG file format.",
    "long_description": "This project is a variety of pixel upscaling algorithms to show how these simple images can be scaled up to fit any screen.  As a further extension to this, we decided to make it possible to convert these images to SVGs in order to really showcase how the algorithms vary from each other.  For work done; I worked on the Nearest Neighbor, EPX, Scale2x, and SVG conversion algorithms, Evan programmed Eagle2x, Bilinear, Bicubic, and xBR, Jeremy setup the ability to play animations and rotsprite upscaling.  Also, I worked a lot on optimizing our algorithms since our first pass on most of them was a very naive approach.  The SVG algorithm while simple also tries to take advantage of the fact that the images are pixel art in order to help speed up rendering of the actual SVG.",
    "technologies": ["Python", "NumPy", "Open CV", "VSCode", "Windows"],
    "image": "pixel_upscale.png",
    "link": "https://github.com/Kirbitz/Pixel-Upscale-To-SVG",
    "contributors": [
      {
        "id": 1,
        "name": "Evan Dewitt",
        "link": "https://github.com/dewitte0210"
      },
      {
        "id": 2,
        "name": "Jeremy Ivanauski",
        "link": "https://github.com/Sirunknown91"
      }
    ]
  },
  {
    "id": 7,
    "title": "Personal Programming Language",
    "details": "A personalized programming language using tokenizer Flex and grammar in Bison.",
    "long_description": "Rough is probably the best way to describe this project.  Overall, this was a fun learning experiece and a huge undertaking in general for a group of people with not a lot of time on their hands.  I would say that I am rather happy with the result we got to with being able to at least mimic some of the general functionallity found in a standard programming language.  However, it is far from perfect, and I have plans to revisit this project in the near future to give it all the bells and whistles of a modern language.  It is a was a great learning experience that taught me a lot about how a programming language works under the hood.",
    "technologies": ["Flex", "Bison", "C", "Bash", "VSCode", "Linux"],
    "image": "ProgLang.png",
    "link": "https://github.com/Kirbitz/Programming-Language",
    "contributors": [
      {
        "id": 1,
        "name": "Ethan Heuer",
        "link": "https://github.com/EthanHeuer"
      },
      {
        "id": 2,
        "name": "Stephen Cornelius",
        "link": "https://github.com/MintyMika"
      }
    ]
  },
  {
    "id": 8,
    "title": "Nomic Game Manager Mobile Side",
    "details": "A mobile app for a board game called Nomic that is meant to act as a game manager.",
    "long_description": "Kotlin >>> Java?  Honestly, not sure, but there was a lot of interesting aspects to learn about, and I am glad to have gotten the chance to learn some mobile development in a group setting.  As the second project for my Capstone we decided to make a mobile app to manage a board game called Nomic.  The premise is to simply create rules and this app would help manage those rules.  However, there were many pitfalls in making this app as no one on the team had any experience with mobile development or Kotlin prior to working on this project.  At the end of it all though we were able to get a working demo to show off before the end of the class even if most of it was not tested.",
    "technologies": [
      "Kotlin",
      "Gradle",
      "Android Development Studio",
      "Windows"
    ],
    "image": "nomic_game.jpg",
    "link": "https://github.com/Kirbitz/NomicGameManager.Mobile",
    "contributors": [
      {
        "id": 1,
        "name": "Tiernan Meyer",
        "link": "https://github.com/meyert8034"
      },
      {
        "id": 2,
        "name": "Adam Lucka",
        "link": "https://github.com/AdamLucka"
      },
      {
        "id": 3,
        "name": "Garrett Preston",
        "link": "https://github.com/Garrett-Preston"
      },
      {
        "id": 4,
        "name": "Luke Matheson",
        "link": "https://github.com/flare199"
      },
      {
        "id": 5,
        "name": "Ben Lamkin",
        "link": "https://github.com/TolkienFan17"
      },
      {
        "id": 6,
        "name": "Jacob Foss",
        "link": "https://github.com/yellowsupercar46"
      },
      {
        "id": 7,
        "name": "Jarod Vandyck",
        "link": "https://github.com/Jpvandyck1"
      },
      {
        "id": 8,
        "name": "Cody Chance",
        "link": "https://github.com/chancec5950"
      }
    ]
  },
  {
    "id": 9,
    "title": "Nomic Game Manager API Side",
    "details": "The API for the Nomic app to retrieve information from.  The API connects to an AWS database.",
    "long_description": "If you have not read the description for the mobile side of the Nomic project please go read that first.  This is the API side for the Nomic project that would connect to our AWS SQL database in order to persist information for the user.  We did manage to get an implementation of login working for this project and prevent a user from accessing other endpoints if they were not logged in.  However, we sadly did not manage to get the login page up and running on the frontend and thus were unable to use it.  We did manage to get a lot of good work accomplished on this side of the project even with the team not being familiar with Kotlin, Spring, and Ktorm.",
    "technologies": ["Kotlin", "Spring", "Gradle", "IntelliJ", "Windows"],
    "image": "nomic_game.jpg",
    "link": "https://github.com/Kirbitz/NomicGameManager.Api",
    "contributors": [
      {
        "id": 1,
        "name": "Tiernan Meyer",
        "link": "https://github.com/meyert8034"
      },
      {
        "id": 2,
        "name": "Adam Lucka",
        "link": "https://github.com/AdamLucka"
      },
      {
        "id": 3,
        "name": "Garrett Preston",
        "link": "https://github.com/Garrett-Preston"
      },
      {
        "id": 4,
        "name": "Luke Matheson",
        "link": "https://github.com/flare199"
      },
      {
        "id": 5,
        "name": "Ben Lamkin",
        "link": "https://github.com/TolkienFan17"
      },
      {
        "id": 6,
        "name": "Jacob Foss",
        "link": "https://github.com/yellowsupercar46"
      },
      {
        "id": 7,
        "name": "Jarod Vandyck",
        "link": "https://github.com/Jpvandyck1"
      },
      {
        "id": 8,
        "name": "Cody Chance",
        "link": "https://github.com/chancec5950"
      }
    ]
  }
]
